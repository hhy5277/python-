>>> import string

>>> string.ascii_letters

    'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'


>>> string.ascii_lowercase

    'abcdefghijklmnopqrstuvwxyz'


>>> string.ascii_uppercase

    'ABCDEFGHIJKLMNOPQRSTUVWXYZ'


>>> string.digits

    '0123456789'


>>> string.hexdigits

    '0123456789abcdefABCDEF'


>>> string.letters

    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'


>>> string.lowercase

    'abcdefghijklmnopqrstuvwxyz'


>>> string.uppercase

    'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

>>> string.octdigits

    '01234567'


>>> string.punctuation

    '!"#$%&\'()*+,-./:;<=>?@[\\]^_`{|}~'


>>> string.printable

    '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!"#$%&\'()*+,-./:;<=>?@[\\]^_`{|}~ \t\n\r\x0b\x0c'


>>> string.whitespace

    '\t\n\x0b\x0c\r

--------------------------------------------------------------
Python 的字符串内建函数
    str.capitalize()         将字符串的第一个字符转换为大写
    str.center(width, fillchar)
    str_.count(str, beg= 0,end=len(str_))   返回 str 在 str_ 里面出现的次数，
                        如果 beg 或者 end 指定则返回指定范围内 str 出现的次数

    bytes.decode(encoding="utf-8", errors="strict")
    但我们可以使用 bytes 对象的 decode() 方法来解码给定的 bytes 对象，
    这个 bytes 对象可以由 str.encode() 来编码返回。

    str.encode(encoding='UTF-8',errors='strict')
    以 encoding 指定的编码格式编码字符串，如果出错默认报一个ValueError 的异常，
    除非 errors 指定的是'ignore'或者'replace'

    str_.endswith(str, beg=0, end=len(str_))
    检查字符串是否以 str 结束，如果是，返回 True,否则返回 False.
    str_.startswith(str,beg=0,end=len(str_))


    str_.find(str, beg=0 end=len(str_))  检测 str 是否包含在字符串中，
    如果指定范围 beg 和 end ，则检查是否包含在指定范围内，
    如果包含返回开始的索引值，否则返回-1
    str_.index(str, beg=0, end=len(str_))
    跟find()方法一样，只不过如果str不在字符串中会报一个异常.



    str_.isalnum()
    如果字符串 至少有一个字符 并且 所有字符都是字母或数字 则返 回 True,否则返回 False
    str_.isalpha()
    如果字符串 至少有一个字符 并且 所有字符都是字母 则返回 True, 否则返回 False
    str_.isdigit()
    如果字符串 只包含数字则 返回 True 否则返回 False..

    islower() isnumeric() isspace() isupper() len(string)
    ljust(width[, fillchar])  lower() strip()

    max(str) 返回字符串 str 中最大的字母。
    min(str) 返回字符串 str 中最小的字母。


    str_.replace(old, new [, max])
    把 将字符串中的 str1 替换成 str2,如果 max 指定，则替换不超过 max 次。
    swapcase()  将字符串中大写转换为小写，小写转换为大写
    str_.zfill (width)   返回长度为 width 的字符串，原字符串右对齐，前面填充0




    str_.join(seq) 以指定字符串作为分隔符，
    将 seq 中所有的元素(的字符串表示)合并为一个新的字符串



















































